[{"/home/lenovo/prj/test_2/metric/client/src/index.tsx":"1","/home/lenovo/prj/test_2/metric/client/src/store/index.ts":"2","/home/lenovo/prj/test_2/metric/client/src/hooks/useTypedSelector.ts":"3","/home/lenovo/prj/test_2/metric/client/src/hooks/useActions.ts":"4","/home/lenovo/prj/test_2/metric/client/src/store/reducers/index.ts":"5","/home/lenovo/prj/test_2/metric/client/src/store/action-creators/index.ts":"6","/home/lenovo/prj/test_2/metric/client/src/store/action-creators/user.ts":"7","/home/lenovo/prj/test_2/metric/client/src/types/user.ts":"8","/home/lenovo/prj/test_2/metric/client/src/pages/management/index.tsx":"9","/home/lenovo/prj/test_2/metric/client/src/pages/management/components/createUsers.tsx":"10","/home/lenovo/prj/test_2/metric/client/src/pages/management/components/userList.tsx":"11","/home/lenovo/prj/test_2/metric/client/src/pages/userConfig/index.tsx":"12","/home/lenovo/prj/test_2/metric/client/src/pages/userPage/index.tsx":"13","/home/lenovo/prj/test_2/metric/client/src/pages/register/components/form.tsx":"14","/home/lenovo/prj/test_2/metric/client/src/App.tsx":"15","/home/lenovo/prj/test_2/metric/client/src/pages/register/logIn/index.tsx":"16","/home/lenovo/prj/test_2/metric/client/src/pages/register/signUp/index.tsx":"17","/home/lenovo/prj/test_2/metric/client/src/helpers/routes.tsx":"18","/home/lenovo/prj/test_2/test_project_clent/src/index.tsx":"19","/home/lenovo/prj/test_2/test_project_clent/src/App.tsx":"20","/home/lenovo/prj/test_2/test_project_clent/src/helpers/routes.tsx":"21","/home/lenovo/prj/test_2/test_project_clent/src/pages/register/signUp/index.tsx":"22","/home/lenovo/prj/test_2/test_project_clent/src/pages/register/logIn/index.tsx":"23","/home/lenovo/prj/test_2/test_project_clent/src/types/user.ts":"24","/home/lenovo/prj/test_2/test_project_clent/src/pages/register/components/form.tsx":"25","/home/lenovo/prj/test_2/test_project_clent/src/store/index.ts":"26","/home/lenovo/prj/test_2/test_project_clent/src/hooks/useActions.ts":"27","/home/lenovo/prj/test_2/test_project_clent/src/hooks/useTypedSelector.ts":"28","/home/lenovo/prj/test_2/test_project_clent/src/store/action-creators/index.ts":"29","/home/lenovo/prj/test_2/test_project_clent/src/store/reducers/index.ts":"30","/home/lenovo/prj/test_2/test_project_clent/src/store/action-creators/user.ts":"31","/home/lenovo/prj/test_2/test_project_clent/src/store/action-creators/admin.ts":"32","/home/lenovo/prj/test_2/test_project_clent/src/pages/management/index.tsx":"33","/home/lenovo/prj/test_2/test_project_clent/src/pages/userPage/index.tsx":"34","/home/lenovo/prj/test_2/test_project_clent/src/store/reducers/admin.ts":"35","/home/lenovo/prj/test_2/test_project_clent/src/helpers/localStorage.ts":"36","/home/lenovo/prj/test_2/test_project_clent/src/pages/management/components/createUsers.tsx":"37","/home/lenovo/prj/test_2/test_project_clent/src/pages/management/components/userList.tsx":"38","/home/lenovo/prj/test_2/test_project_clent/src/pages/userConfig/index.tsx":"39","/home/lenovo/prj/test_2/test_project_clent/src/store/reducers/user.ts":"40","/home/lenovo/prj/test_2/test_project_clent/src/hooks/useSearch.ts":"41"},{"size":273,"mtime":1636617267028,"results":"42","hashOfConfig":"43"},{"size":197,"mtime":1636617267032,"results":"44","hashOfConfig":"43"},{"size":187,"mtime":1636617267028,"results":"45","hashOfConfig":"43"},{"size":266,"mtime":1636617394124,"results":"46","hashOfConfig":"43"},{"size":276,"mtime":1636617267032,"results":"47","hashOfConfig":"43"},{"size":163,"mtime":1636617267032,"results":"48","hashOfConfig":"43"},{"size":764,"mtime":1636617267032,"results":"49","hashOfConfig":"43"},{"size":636,"mtime":1636617267032,"results":"50","hashOfConfig":"43"},{"size":411,"mtime":1636636699204,"results":"51","hashOfConfig":"43"},{"size":2542,"mtime":1636635668339,"results":"52","hashOfConfig":"43"},{"size":2189,"mtime":1636639085767,"results":"53","hashOfConfig":"43"},{"size":5360,"mtime":1636655547676,"results":"54","hashOfConfig":"43"},{"size":1471,"mtime":1636659015996,"results":"55","hashOfConfig":"43"},{"size":4167,"mtime":1636722412801,"results":"56","hashOfConfig":"43"},{"size":792,"mtime":1636708450576,"results":"57","hashOfConfig":"43"},{"size":247,"mtime":1636711071842,"results":"58","hashOfConfig":"43"},{"size":289,"mtime":1636711382127,"results":"59","hashOfConfig":"43"},{"size":1141,"mtime":1636722883748,"results":"60","hashOfConfig":"43"},{"size":273,"mtime":1636917204130,"results":"61","hashOfConfig":"62"},{"size":867,"mtime":1636917204126,"results":"63","hashOfConfig":"62"},{"size":1252,"mtime":1636917204130,"results":"64","hashOfConfig":"62"},{"size":1641,"mtime":1636917204134,"results":"65","hashOfConfig":"62"},{"size":1289,"mtime":1636917204134,"results":"66","hashOfConfig":"62"},{"size":1675,"mtime":1636917204142,"results":"67","hashOfConfig":"62"},{"size":4079,"mtime":1636939457932,"results":"68","hashOfConfig":"62"},{"size":197,"mtime":1636917204142,"results":"69","hashOfConfig":"62"},{"size":266,"mtime":1636917204130,"results":"70","hashOfConfig":"62"},{"size":187,"mtime":1636917204130,"results":"71","hashOfConfig":"62"},{"size":147,"mtime":1636917204142,"results":"72","hashOfConfig":"62"},{"size":258,"mtime":1636917204142,"results":"73","hashOfConfig":"62"},{"size":3762,"mtime":1636939606848,"results":"74","hashOfConfig":"62"},{"size":3754,"mtime":1636936049161,"results":"75","hashOfConfig":"62"},{"size":2328,"mtime":1636940192963,"results":"76","hashOfConfig":"62"},{"size":2040,"mtime":1636940027200,"results":"77","hashOfConfig":"62"},{"size":654,"mtime":1636917204142,"results":"78","hashOfConfig":"62"},{"size":533,"mtime":1636917204130,"results":"79","hashOfConfig":"62"},{"size":3505,"mtime":1636933618226,"results":"80","hashOfConfig":"62"},{"size":2882,"mtime":1636930593136,"results":"81","hashOfConfig":"62"},{"size":8961,"mtime":1636924614863,"results":"82","hashOfConfig":"62"},{"size":1408,"mtime":1636935636741,"results":"83","hashOfConfig":"62"},{"size":262,"mtime":1636934171474,"results":"84","hashOfConfig":"62"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},"7axs20",{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},"1mctnyf",{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"126"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"126"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"126"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"126"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},"/home/lenovo/prj/test_2/metric/client/src/index.tsx",[],["175","176"],"/home/lenovo/prj/test_2/metric/client/src/store/index.ts",[],"/home/lenovo/prj/test_2/metric/client/src/hooks/useTypedSelector.ts",[],"/home/lenovo/prj/test_2/metric/client/src/hooks/useActions.ts",[],"/home/lenovo/prj/test_2/metric/client/src/store/reducers/index.ts",[],"/home/lenovo/prj/test_2/metric/client/src/store/action-creators/index.ts",["177"],"/home/lenovo/prj/test_2/metric/client/src/store/action-creators/user.ts",[],"/home/lenovo/prj/test_2/metric/client/src/types/user.ts",[],"/home/lenovo/prj/test_2/metric/client/src/pages/management/index.tsx",[],["178","179"],"/home/lenovo/prj/test_2/metric/client/src/pages/management/components/createUsers.tsx",[],"/home/lenovo/prj/test_2/metric/client/src/pages/management/components/userList.tsx",[],"/home/lenovo/prj/test_2/metric/client/src/pages/userConfig/index.tsx",[],"/home/lenovo/prj/test_2/metric/client/src/pages/userPage/index.tsx",[],"/home/lenovo/prj/test_2/metric/client/src/pages/register/components/form.tsx",["180","181","182"],"import React, { useState } from \"react\";\nimport {\n  Button,\n  TextField,\n  Grid,\n  Paper,\n  Typography,\n  Link,\n} from \"@material-ui/core\";\nimport { useForm } from \"react-hook-form\";\nimport { NavLink } from \"react-router-dom\";\n// import { BRAND_NAME } from \"../constants\";\n\ninterface loginForm {\n  isLogin: boolean;\n}\n\nconst Form: React.FC<loginForm> = ({ isLogin }) => {\n  // const login = false;\n\n  // const registr = () => {};\n  // const login = () => {};\n  // const changePage = () => {\n  //   setIsLogin(true);\n  // };\n\n  return (\n    <div>\n      <Grid container spacing={0} direction=\"row\">\n        <Grid item style={{ width: \"400px\" }}>\n          <Grid container direction=\"column\" spacing={2} className=\"login-form\">\n            <Paper\n              variant=\"elevation\"\n              elevation={2}\n              className=\"login-background\"\n            >\n              <Grid item>\n                <Typography component=\"h1\" variant=\"h5\">\n                  {isLogin ? \"SIGN UP\" : \"login in\"}\n                </Typography>\n              </Grid>\n              <Grid item>\n                <form>\n                  <Grid container direction=\"column\" spacing={2}>\n                    <Grid item>\n                      <TextField\n                        type=\"email\"\n                        placeholder=\"Email\"\n                        fullWidth\n                        name=\"username\"\n                        variant=\"outlined\"\n                        // value={this.state.username}\n                        onChange={\n                          (event) => {}\n                          // this.setState({\n                          //   [event.target.name]: event.target.value,\n                          // })\n                        }\n                        required\n                        autoFocus\n                      />\n                    </Grid>\n                    {isLogin ? (\n                      <Grid item>\n                        <TextField\n                          type=\"user name\"\n                          placeholder=\"User Name\"\n                          fullWidth\n                          name=\"text\"\n                          variant=\"outlined\"\n                          // value={this.state.username}\n                          onChange={\n                            (event) => {}\n                            // this.setState({\n                            //   [event.target.name]: event.target.value,\n                            // })\n                          }\n                          required\n                          autoFocus\n                        />\n                      </Grid>\n                    ) : null}\n                    <Grid item>\n                      <TextField\n                        type=\"password\"\n                        placeholder=\"Password\"\n                        fullWidth\n                        name=\"password\"\n                        variant=\"outlined\"\n                        // value={this.state.password}\n                        onChange={\n                          (event) => {}\n                          // this.setState({\n                          //   [event.target.name]: event.target.value,\n                          // })\n                        }\n                        required\n                      />\n                    </Grid>\n                    <Grid item>\n                      <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        type=\"submit\"\n                        className=\"button-block\"\n                      >\n                        Submit\n                      </Button>\n                    </Grid>\n                  </Grid>\n                </form>\n              </Grid>\n              {isLogin ? null : (\n                <Grid item>\n                  <NavLink\n                    to={\"/signup\"}\n                    className=\"font-medium text-indigo-600 hover:text-indigo-500\"\n                  >\n                    <h4>SIGN UP</h4>\n                  </NavLink>\n                </Grid>\n              )}\n            </Paper>\n          </Grid>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\nexport default Form;\n","/home/lenovo/prj/test_2/metric/client/src/App.tsx",[],"/home/lenovo/prj/test_2/metric/client/src/pages/register/logIn/index.tsx",[],"/home/lenovo/prj/test_2/metric/client/src/pages/register/signUp/index.tsx",[],"/home/lenovo/prj/test_2/metric/client/src/helpers/routes.tsx",[],"/home/lenovo/prj/test_2/test_project_clent/src/index.tsx",[],["183","184"],"/home/lenovo/prj/test_2/test_project_clent/src/App.tsx",[],"/home/lenovo/prj/test_2/test_project_clent/src/helpers/routes.tsx",[],"/home/lenovo/prj/test_2/test_project_clent/src/pages/register/signUp/index.tsx",["185"],"import React, { useState } from \"react\";\nimport { useActions } from \"../../../hooks/useActions\";\nimport Form from \"../components/form\";\n\ninterface loginForm {\n  userName: string;\n  fullName: string;\n  email: string;\n  password: string;\n}\ninterface dataForm {\n  userName: boolean;\n  fullName: boolean;\n  email: boolean;\n  password: boolean;\n}\n\nconst SignUp: React.FC = () => {\n  const [valid, setValid] = useState<dataForm>({\n    userName: false,\n    fullName: false,\n    email: false,\n    password: false,\n  });\n  const { registration } = useActions();\n\n  const onSubmit = (data: loginForm) => {\n    if (!valid.email && !valid.password && !valid.userName && !valid.fullName) {\n      registration(\n        data.email,\n        data.userName,\n        data.password,\n        data.fullName,\n        \"standard\"\n      );\n    } else {\n      alert(\"invalid data\");\n    }\n  };\n\n  const isValid = (form: loginForm) => {\n    const name = /^([A-Za-zéàë]{2,40} ?)+$/;\n    const email = /^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/;\n    const password = /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$/;\n    const nameValue = name.test(form.fullName) || form.fullName === \"\";\n    const passwordValue = password.test(form.password) || form.password === \"\";\n    const emailValue = email.test(form.email) || form.email === \"\";\n    const fullNameValue = name.test(form.fullName) || form.fullName === \"\";\n\n    setValid({\n      userName: !nameValue,\n      fullName: !fullNameValue,\n      email: !emailValue,\n      password: !passwordValue,\n    });\n  };\n\n  return (\n    <Form isLogin={true} onSubmit={onSubmit} isValid={isValid} valid={valid} />\n  );\n};\n\nexport default SignUp;\n","/home/lenovo/prj/test_2/test_project_clent/src/pages/register/logIn/index.tsx",["186"],"import React, { useState } from \"react\";\nimport { useActions } from \"../../../hooks/useActions\";\nimport Form from \"../components/form\";\ninterface loginForm {\n  email: string;\n  password: string;\n}\ninterface dataForm {\n  userName: boolean;\n  fullName:boolean\n  email: boolean;\n  password: boolean;\n}\n\nconst LogIn: React.FC = () => {\n  const [valid, setValid] = useState<dataForm>({\n    userName: false,\n    fullName:false,\n    email: false,\n    password: false,\n  });\n  const { authLogin } = useActions();\n\n  const onSubmit = (data: loginForm) => {\n    if (!valid.email && !valid.password && !valid.userName && !valid.fullName) {\n      authLogin(data.email, data.password);\n    } else {\n      alert(\"invalid data\");\n    }\n  };\n\n  const isValid = (form: loginForm) => {\n    const email = /^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/;\n    const password = /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$/;\n    const passwordValue = password.test(form.password) || form.password === \"\";\n    const emailValue = email.test(form.email) || form.email === \"\";\n\n    setValid({\n      userName: false,\n      fullName:false,\n      email: !emailValue,\n      password: !passwordValue,\n    });\n  };\n\n  return (\n    <Form isLogin={false} onSubmit={onSubmit} isValid={isValid} valid={valid} />\n  );\n};\n\nexport default LogIn;\n","/home/lenovo/prj/test_2/test_project_clent/src/types/user.ts",[],"/home/lenovo/prj/test_2/test_project_clent/src/pages/register/components/form.tsx",[],"/home/lenovo/prj/test_2/test_project_clent/src/store/index.ts",[],"/home/lenovo/prj/test_2/test_project_clent/src/hooks/useActions.ts",[],"/home/lenovo/prj/test_2/test_project_clent/src/hooks/useTypedSelector.ts",[],"/home/lenovo/prj/test_2/test_project_clent/src/store/action-creators/index.ts",["187"],"import * as AuthenticationCreators from \"./user\";\nimport * as Update from \"./admin\";\nexport default {\n  ...AuthenticationCreators,\n  ...Update,\n};\n","/home/lenovo/prj/test_2/test_project_clent/src/store/reducers/index.ts",[],"/home/lenovo/prj/test_2/test_project_clent/src/store/action-creators/user.ts",[],"/home/lenovo/prj/test_2/test_project_clent/src/store/action-creators/admin.ts",[],"/home/lenovo/prj/test_2/test_project_clent/src/pages/management/index.tsx",["188"],"/home/lenovo/prj/test_2/test_project_clent/src/pages/userPage/index.tsx",["189"],"/home/lenovo/prj/test_2/test_project_clent/src/store/reducers/admin.ts",[],"/home/lenovo/prj/test_2/test_project_clent/src/helpers/localStorage.ts",[],"/home/lenovo/prj/test_2/test_project_clent/src/pages/management/components/createUsers.tsx",[],"/home/lenovo/prj/test_2/test_project_clent/src/pages/management/components/userList.tsx",[],"/home/lenovo/prj/test_2/test_project_clent/src/pages/userConfig/index.tsx",["190","191"],"import * as React from \"react\";\nimport styles from \"./style.module.css\";\n\nimport Box from \"@mui/material/Box\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Input from \"@mui/material/Input\";\nimport Button from \"@mui/material/Button\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport InputAdornment from \"@mui/material/InputAdornment\";\nimport ArrowBackIcon from \"@mui/icons-material/ArrowBack\";\n\nimport FormControl from \"@mui/material/FormControl\";\nimport TextField from \"@mui/material/TextField\";\nimport Visibility from \"@mui/icons-material/Visibility\";\nimport VisibilityOff from \"@mui/icons-material/VisibilityOff\";\nimport Grid from \"@mui/material/Grid\";\nimport Typography from \"@mui/material/Typography\";\nimport { useActions } from \"../../hooks/useActions\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { useTypedSelector } from \"../../hooks/useTypedSelector\";\n\nconst billingPlan = [\n  { name: \"standard\", price: \"  0$\", id: 10 },\n  { name: \"comfort\", price: \"  20$\", id: 11 },\n  { name: \"premium\", price: \"  40$\", id: 12 },\n];\n\nconst UserConfig: React.FC = () => {\n  const [values, setValues] = React.useState({\n    userName: \"\",\n    fullName: \"\",\n    email: \"\",\n    password: \"\",\n    billingPlan: \"\",\n    showPassword: false,\n  });\n  const { AdminRegistration, setLoading, updateUserData, getAllUserData } =\n    useActions();\n  let userData: any = null;\n  const history = useHistory();\n  const { id } = useParams();\n  const { allUsers } = useTypedSelector((state) => state.admin);\n\n  userData = allUsers.find((item) => item._id === id);\n\n  React.useEffect(() => {\n    if (userData) {\n      setValues({\n        ...values,\n        fullName: userData.fullName,\n        userName: userData.userName,\n        email: userData.email,\n        password: userData.billingPlan,\n        billingPlan: userData.billingPlan,\n      });\n    }\n  }, []);\n\n  const onSubmit = async () => {\n    const name = /^([A-Za-zéàë]{2,40} ?)+$/;\n    const email = /^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/;\n    const password = /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$/;\n    const nameValue = name.test(values.fullName) || values.fullName === \"\";\n    const passwordValue =\n      password.test(values.password) || values.password === \"\";\n    const emailValue = email.test(values.email) || values.email === \"\";\n    const fullNameValue = name.test(values.fullName) || values.fullName === \"\";\n    if (\n      nameValue &&\n      passwordValue &&\n      emailValue &&\n      fullNameValue &&\n      values.billingPlan\n    ) {\n      await setLoading(false);\n      await AdminRegistration(\n        values.email,\n        values.userName,\n        values.fullName,\n        values.billingPlan,\n        values.password\n      );\n      setLoading(true);\n      history.push(\"home\");\n    } else {\n      alert(\"invalid data\");\n    }\n    setLoading(true);\n  };\n\n  const onUpdate = async () => {\n    const name = /^([A-Za-zéàë]{2,40} ?)+$/;\n    const nameValue = name.test(values.fullName) || values.fullName === \"\";\n    const fullNameValue = name.test(values.fullName) || values.fullName === \"\";\n    if (nameValue && fullNameValue && values.billingPlan) {\n      await setLoading(false);\n      await updateUserData(\n        userData._id,\n        values.userName,\n        values.fullName,\n        values.billingPlan\n      );\n      setLoading(true);\n      getAllUserData();\n      history.push(\"home\");\n    } else {\n      alert(\"invalid data\");\n    }\n    setLoading(true);\n  };\n\n  const handleChange =\n    (prop: string) => (event: React.ChangeEvent<HTMLInputElement>) => {\n      setValues({ ...values, [prop]: event.target.value });\n    };\n\n  const handleClickShowPassword = () => {\n    setValues({\n      ...values,\n      showPassword: !values.showPassword,\n    });\n  };\n\n  const handleMouseDownPassword = (event: React.MouseEvent) => {\n    event.preventDefault();\n  };\n\n  return (\n    <div>\n      <div\n        style={{ color: \"red\", cursor: \"pointer\", width: \"40px\" }}\n        onClick={() => {\n          history.push(\"/home\");\n        }}\n      >\n        <ArrowBackIcon fontSize=\"large\" />\n      </div>\n      <br />\n      <div>\n        <Box\n          sx={{ display: \"flex\", flexWrap: \"wrap\" }}\n          className={styles.container}\n        >\n          <div>\n            <div style={{ display: \"flex\" }}>\n              <Grid item xs={12} sm={6} m={1}>\n                <TextField\n                  required\n                  id=\"fullName\"\n                  name=\"fullName\"\n                  label=\"Full Name\"\n                  fullWidth\n                  margin=\"dense\"\n                  error={\"\" ? true : false}\n                  value={values.fullName}\n                  onChange={handleChange(\"fullName\")}\n                />\n                <Typography\n                  variant=\"inherit\"\n                  color=\"textSecondary\"\n                ></Typography>\n              </Grid>\n              <Grid item xs={12} sm={6} m={1}>\n                <TextField\n                  required\n                  id=\"name\"\n                  name=\"name\"\n                  label=\"Nser Name\"\n                  fullWidth\n                  margin=\"dense\"\n                  // {...register(\"username\")}\n                  error={\"\" ? true : false}\n                  value={values.userName}\n                  onChange={handleChange(\"userName\")}\n                />\n                <Typography variant=\"inherit\" color=\"textSecondary\">\n                  {/* {errors.username?.message} */}\n                </Typography>\n              </Grid>\n\n              <Grid item xs={12} sm={6} m={1}>\n                <TextField\n                  required\n                  id=\"email\"\n                  name=\"email\"\n                  autoComplete=\"on\"\n                  label=\"email\"\n                  fullWidth\n                  margin=\"dense\"\n                  value={values.email}\n                  onChange={() => (userData ? null : handleChange(\"email\"))}\n                  error={\"\" ? true : false}\n                />\n                <Typography\n                  variant=\"inherit\"\n                  color=\"textSecondary\"\n                ></Typography>\n              </Grid>\n            </div>\n\n            <FormControl sx={{ m: 1, width: \"25ch\" }} variant=\"standard\">\n              <InputLabel error htmlFor=\"standard-adornment-password\">\n                Password\n              </InputLabel>\n              <Input\n                error\n                id=\"standard-adornment-password\"\n                type={values.showPassword ? \"text\" : \"password\"}\n                value={values.password}\n                onChange={() => (userData ? null : handleChange(\"password\"))}\n                endAdornment={\n                  <InputAdornment position=\"end\">\n                    <IconButton\n                      aria-label=\"toggle password visibility\"\n                      onClick={handleClickShowPassword}\n                      onMouseDown={handleMouseDownPassword}\n                    >\n                      {values.showPassword ? <VisibilityOff /> : <Visibility />}\n                    </IconButton>\n                  </InputAdornment>\n                }\n              />\n            </FormControl>\n            <br />\n            <h3 style={{ margin: \"18px\" }}> Billing Plan</h3>\n            {billingPlan.map((item) => {\n              if (item.name === values.billingPlan) {\n                return (\n                  <Button\n                    key={item.id}\n                    // variant=\"contained\"\n                    color=\"success\"\n                    style={{\n                      backgroundColor: \"green\",\n                      color: \"white\",\n                      margin: \"6px\",\n                    }}\n                  >\n                    <h3>{item.name}</h3>\n                    <h2 style={{ margin: \"6px\" }}>{item.price}</h2>\n                  </Button>\n                );\n              }\n              return (\n                <Button\n                  key={item.id}\n                  color=\"secondary\"\n                  style={{ margin: \"6px\" }}\n                  onClick={() => {\n                    setValues({\n                      ...values,\n                      billingPlan: item.name,\n                    });\n                  }}\n                >\n                  <h3>{item.name}</h3>\n                  <h2 style={{ margin: \"6px\" }}>{item.price}</h2>\n                </Button>\n              );\n            })}\n          </div>\n        </Box>\n      </div>\n      {userData ? (\n        <Button\n          onClick={() => {\n            onUpdate();\n          }}\n          variant=\"contained\"\n          color=\"success\"\n          style={{ margin: \"20px\" }}\n        >\n          Update\n        </Button>\n      ) : (\n        <Button\n          onClick={() => {\n            onSubmit();\n          }}\n          variant=\"contained\"\n          color=\"success\"\n          style={{ margin: \"20px\" }}\n        >\n          Create +\n        </Button>\n      )}\n    </div>\n  );\n};\nexport default UserConfig;\n","/home/lenovo/prj/test_2/test_project_clent/src/store/reducers/user.ts",[],"/home/lenovo/prj/test_2/test_project_clent/src/hooks/useSearch.ts",[],{"ruleId":"192","replacedBy":"193"},{"ruleId":"194","replacedBy":"195"},{"ruleId":"196","severity":1,"message":"197","line":4,"column":1,"nodeType":"198","endLine":7,"endColumn":2},{"ruleId":"192","replacedBy":"199"},{"ruleId":"194","replacedBy":"200"},{"ruleId":"201","severity":1,"message":"202","line":1,"column":17,"nodeType":"203","messageId":"204","endLine":1,"endColumn":25},{"ruleId":"201","severity":1,"message":"205","line":8,"column":3,"nodeType":"203","messageId":"204","endLine":8,"endColumn":7},{"ruleId":"201","severity":1,"message":"206","line":10,"column":10,"nodeType":"203","messageId":"204","endLine":10,"endColumn":17},{"ruleId":"192","replacedBy":"207"},{"ruleId":"194","replacedBy":"208"},{"ruleId":"209","severity":1,"message":"210","line":43,"column":25,"nodeType":"211","messageId":"212","endLine":43,"endColumn":26,"suggestions":"213"},{"ruleId":"209","severity":1,"message":"210","line":33,"column":25,"nodeType":"211","messageId":"212","endLine":33,"endColumn":26,"suggestions":"214"},{"ruleId":"196","severity":1,"message":"197","line":3,"column":1,"nodeType":"198","endLine":6,"endColumn":3},{"ruleId":"215","severity":1,"message":"216","line":61,"column":6,"nodeType":"217","endLine":61,"endColumn":64,"suggestions":"218"},{"ruleId":"201","severity":1,"message":"219","line":16,"column":9,"nodeType":"203","messageId":"204","endLine":16,"endColumn":16},{"ruleId":"215","severity":1,"message":"220","line":57,"column":6,"nodeType":"217","endLine":57,"endColumn":8,"suggestions":"221"},{"ruleId":"209","severity":1,"message":"210","line":61,"column":25,"nodeType":"211","messageId":"212","endLine":61,"endColumn":26,"suggestions":"222"},"no-native-reassign",["223"],"no-negated-in-lhs",["224"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration",["223"],["224"],"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'useForm' is defined but never used.",["223"],["224"],"no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["225","226"],["227","228"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'allUserData', 'check', 'dat', and 'searchFunc'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setData' needs the current value of 'check'.","ArrayExpression",["229"],"'history' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'userData' and 'values'. Either include them or remove the dependency array. You can also do a functional update 'setValues(v => ...)' if you only need 'values' in the 'setValues' call.",["230"],["231","232"],"no-global-assign","no-unsafe-negation",{"messageId":"233","fix":"234","desc":"235"},{"messageId":"236","fix":"237","desc":"238"},{"messageId":"233","fix":"239","desc":"235"},{"messageId":"236","fix":"240","desc":"238"},{"desc":"241","fix":"242"},{"desc":"243","fix":"244"},{"messageId":"233","fix":"245","desc":"235"},{"messageId":"236","fix":"246","desc":"238"},"removeEscape",{"range":"247","text":"248"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"249","text":"250"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"251","text":"248"},{"range":"252","text":"250"},"Update the dependencies array to be: [allUserData, check, check.comfort, check.premium, check.standard, dat, searchData, searchFunc]",{"range":"253","text":"254"},"Update the dependencies array to be: [userData, values]",{"range":"255","text":"256"},{"range":"257","text":"248"},{"range":"258","text":"250"},[978,979],"",[978,978],"\\",[792,793],[792,792],[1704,1762],"[allUserData, check, check.comfort, check.premium, check.standard, dat, searchData, searchFunc]",[1875,1877],"[userData, values]",[1983,1984],[1983,1983]]